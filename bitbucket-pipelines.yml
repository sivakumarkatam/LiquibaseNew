# This is a sample build configuration for Java (Maven).
# # Check our guides at https://confluence.atlassian.com/x/zd-5Mw for more examples.
# # Only use spaces to indent your .yml configuration.
# # -----
# # You can specify a custom docker image from Docker Hub as your build environment.
image: dhavaljbhatt/java_maven_npm_bower:v4

pipelines:
  branches:
   jenkinsflyway:
     - step:
         caches:
           - maven
         script:
           - ls -lrt
     - step:
         name: Admin DB
         caches:
           - maven
         trigger: manual  # uncomment to have a manual step	 
         script:
           - ls -lrt
             #- sed -i "s/dbpath/admindb/g" pom.xml
             # - sed -i "s/dbname/admin/g" pom.xml ; cat pom.xml
           - sed -i "s/dbpath/$DB_Path/g" pom.xml
           - sed -i "s/dbname/$DB_Name/g" pom.xml ; cat pom.xml
             # - sed -i "s/dbpath/payflowdb/g" pom.xml
             #- sed -i "s/dbname/payflow/g" pom.xml ; cat pom.xml
           - ls -lrt
           - cat pom.xml
           - zip -r newfile.zip *
           - pwd
           - ls -lrt
           - apt install -y awscli
            # - aws s3 cp newfile.zip s3://deployment-bucket/$BITBUCKET_BUILD_NUMBER/
         artifacts:
          - newfile.zip
     - step:
        # set AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY as environment variables
        name: Deploy to S3
        #trigger: manual  # uncomment to have a manual step
        image: atlassian/pipelines-awscli
        script:
          - pwd
          - ls -lrt
          - ls -lrt /opt/atlassian/pipelines/agent
          - aws s3 cp newfile.zip s3://deployment-bucket/$BITBUCKET_BUILD_NUMBER/
     - step:
        # set AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY and AWS_DEFAULT_REGION as environment variables
        name: Deploy to DB_pipeline
        deployment: test   # set to test, staging or production
        trigger: manual  # uncomment to have a manual step
        image: atlassian/pipelines-awscli
        script:
          - aws deploy create-deployment --application-name Deployment --s3-location bucket=deployment-bucket,key=$BITBUCKET_BUILD_NUMBER/newfile.zip,bundleType=zip --deployment-group-name DB-bitbucketpipeline
